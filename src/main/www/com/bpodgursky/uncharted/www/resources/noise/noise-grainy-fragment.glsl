

//      const float tempColors[4096] = float[4096](0,0,0,255,4,0,0,255,8,0,0,255,13,0,0,255,17,0,0,255,21,0,0,255,26,0,0,255,30,0,0,255,34,0,0,255,38,0,0,255,42,0,0,255,47,0,0,255,51,0,0,255,55,0,0,255,60,0,0,255,64,0,0,255,68,0,0,255,72,0,0,255,76,0,0,255,81,0,0,255,85,0,0,255,89,0,0,255,93,0,0,255,97,0,0,255,101,0,0,255,105,0,0,255,109,0,0,255,113,0,0,255,117,0,0,255,121,0,0,255,125,0,0,255,130,0,0,255,134,0,0,255,138,0,0,255,142,0,0,255,146,0,0,255,150,0,0,255,154,0,0,255,158,0,0,255,162,0,0,255,166,0,0,255,170,0,0,255,174,0,0,255,178,0,0,255,183,0,0,255,187,0,0,255,191,0,0,255,196,0,0,255,200,0,0,255,204,0,0,255,208,0,0,255,212,0,0,255,217,0,0,255,221,0,0,255,225,0,0,255,230,0,0,255,234,0,0,255,238,0,0,255,242,0,0,255,246,0,0,255,251,0,0,255,255,0,0,255,255,2,0,255,255,5,0,255,255,7,0,255,255,9,0,255,255,12,0,255,255,14,0,255,255,16,0,255,255,19,0,255,255,21,0,255,255,23,0,255,255,26,0,255,255,28,0,255,255,30,0,255,255,33,0,255,255,35,0,255,255,37,0,255,255,40,0,255,255,42,0,255,255,44,0,255,255,47,0,255,255,49,0,255,255,52,0,255,255,54,0,255,255,56,0,255,255,59,0,255,255,61,0,255,255,63,0,255,255,66,0,255,255,68,0,255,255,70,0,255,255,73,0,255,255,75,0,255,255,77,0,255,255,80,0,255,255,82,0,255,255,84,0,255,255,87,0,255,255,89,0,255,255,91,0,255,255,94,0,255,255,96,0,255,255,100,7,255,255,105,14,255,255,109,20,255,255,114,27,255,255,118,34,255,255,123,41,255,255,127,48,255,255,131,54,255,255,136,61,255,255,140,68,255,255,145,75,255,255,149,82,255,255,153,88,255,255,158,95,255,255,162,102,255,255,167,109,255,255,171,116,255,255,176,123,255,255,180,129,255,255,184,136,255,255,189,143,255,255,193,150,255,255,198,157,255,255,202,163,255,255,206,170,255,255,211,177,255,255,215,184,255,255,220,191,255,255,224,197,255,255,229,204,255,255,233,211,255,255,234,212,255,255,234,213,255,255,235,214,255,255,235,215,255,255,236,216,255,255,236,216,255,255,237,217,255,255,237,218,255,255,238,219,255,255,238,220,255,255,239,221,255,255,239,222,255,255,240,223,255,255,241,224,255,255,241,225,255,255,242,225,255,255,242,226,255,255,243,227,255,255,243,228,255,255,244,229,255,255,244,230,255,255,245,231,255,255,245,232,255,255,246,233,255,255,246,234,255,255,247,234,255,255,247,235,255,255,248,236,255,255,249,237,255,255,249,238,255,255,250,239,255,255,250,240,255,255,251,241,255,255,251,242,255,255,252,243,255,255,252,243,255,255,253,244,255,255,253,245,255,255,254,246,255,255,254,247,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,248,255,255,255,249,255,255,255,249,255,255,255,249,255,255,255,249,255,255,255,249,255,255,255,249,255,255,255,249,255,255,255,249,255,255,255,249,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,250,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,251,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,252,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,253,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,254,255,255,250,253,255,255,248,251,255,255,245,250,255,255,243,249,255,255,240,248,255,255,238,246,255,255,235,245,255,255,233,244,255,255,230,243,255,255,228,241,255,255,225,240,255,255,223,239,255,255,220,238,255,255,218,236,255,255,215,235,255,255,213,234,255,255,210,233,255,255,208,232,255,255,205,230,255,255,203,229,255,255,200,228,255,255,198,227,255,255,195,225,255,255,193,224,255,255,190,223,255,255,188,222,255,255,185,220,255,255,183,219,255,255,180,218,255,255,178,217,255,255,175,215,255,255,173,214,255,255,170,213,255,255,168,212,255,255,165,211,255,255,163,209,255,255,160,208,255,255,158,207,255,255,155,206,255,255,153,204,255,255,150,203,255,255,148,202,255,255,145,201,255,255,143,199,255,255,140,198,255,255,138,197,255,255,135,196,255,255,133,194,255,255,130,193,255,255,128,192,255,255,127,191,255,255,126,190,255,255,126,190,255,255,125,189,255,255,124,188,255,255,123,187,255,255,122,186,255,255,122,186,255,255,121,185,255,255,120,184,255,255,119,183,255,255,119,183,255,255,118,182,255,255,117,181,255,255,116,180,255,255,115,179,255,255,115,179,255,255,114,178,255,255,113,177,255,255,112,176,255,255,111,175,255,255,111,175,255,255,110,174,255,255,109,173,255,255,108,172,255,255,107,171,255,255,107,171,255,255,106,170,255,255,105,169,255,255,104,168,255,255,104,168,255,255,103,167,255,255,102,166,255,255,101,165,255,255,100,164,255,255,100,164,255,255,99,163,255,255,98,162,255,255,97,161,255,255,96,160,255,255,96,160,255,255,95,159,255,255,94,158,255,255,93,157,255,255,92,156,255,255,92,156,255,255,91,155,255,255,90,154,255,255,89,153,255,255,88,152,255,255,88,152,255,255,87,151,255,255,86,150,255,255,85,149,255,255,85,149,255,255,84,148,255,255,83,147,255,255,82,146,255,255,81,145,255,255,81,145,255,255,80,144,255,255,79,143,255,255,78,142,255,255,77,141,255,255,77,141,255,255,76,140,255,255,75,139,255,255,74,138,255,255,73,137,255,255,73,137,255,255,72,136,255,255,71,135,255,255,70,134,255,255,70,134,255,255,69,133,255,255,68,132,255,255,67,131,255,255,66,130,255,255,66,130,255,255,65,129,255,255,64,128,255,255,64,128,255,255,63,127,255,255,63,127,255,255,62,126,255,255,62,126,255,255,61,125,255,255,61,125,255,255,60,124,255,255,60,124,255,255,60,124,255,255,59,123,255,255,59,123,255,255,58,122,255,255,58,122,255,255,57,121,255,255,57,121,255,255,56,120,255,255,56,120,255,255,56,120,255,255,55,119,255,255,55,119,255,255,54,118,255,255,54,118,255,255,53,117,255,255,53,117,255,255,52,116,255,255,52,116,255,255,52,116,255,255,51,115,255,255,51,115,255,255,50,114,255,255,50,114,255,255,49,113,255,255,49,113,255,255,48,112,255,255,48,112,255,255,48,112,255,255,47,111,255,255,47,111,255,255,46,110,255,255,46,110,255,255,45,109,255,255,45,109,255,255,44,108,255,255,44,108,255,255,44,108,255,255,43,107,255,255,43,107,255,255,42,106,255,255,42,106,255,255,41,105,255,255,41,105,255,255,40,104,255,255,40,104,255,255,40,104,255,255,39,103,255,255,39,103,255,255,38,102,255,255,38,102,255,255,37,101,255,255,37,101,255,255,36,100,255,255,36,100,255,255,36,100,255,255,35,99,255,255,35,99,255,255,34,98,255,255,34,98,255,255,33,97,255,255,33,97,255,255,32,96,255,255,32,96,255,255,32,96,255,255,31,95,255,255,31,95,255,255,30,94,255,255,30,94,255,255,29,93,255,255,29,93,255,255,28,92,255,255,28,92,255,255,28,92,255,255,27,91,255,255,27,91,255,255,26,90,255,255,26,90,255,255,25,89,255,255,25,89,255,255,24,88,255,255,24,88,255,255,24,88,255,255,23,87,255,255,23,87,255,255,22,86,255,255,22,86,255,255,21,85,255,255,21,85,255,255,20,84,255,255,20,84,255,255,20,84,255,255,19,83,255,255,19,83,255,255,18,82,255,255,18,82,255,255,17,81,255,255,17,81,255,255,16,80,255,255,16,80,255,255,16,80,255,255,15,79,255,255,15,79,255,255,14,78,255,255,14,78,255,255,13,77,255,255,13,77,255,255,12,76,255,255,12,76,255,255,12,76,255,255,11,75,255,255,11,75,255,255,10,74,255,255,10,74,255,255,9,73,255,255,9,73,255,255,8,72,255,255,8,72,255,255,8,72,255,255,7,71,255,255,7,71,255,255,6,70,255,255,6,70,255,255,5,69,255,255,5,69,255,255,4,68,255,255,4,68,255,255,4,68,255,255,3,67,255,255,3,67,255,255,2,66,255,255,2,66,255,255,1,65,255,255,1,65,255,255,0,64,255,255,0,64,255,255,0,64,255,255,0,64,255,255,0,64,255,255,0,64,255,255,0,64,255,255,0,64,255,255,0,64,255,255,0,63,255,255,0,63,255,255,0,63,255,255,0,63,255,255,0,63,255,255,0,63,255,255,0,63,255,255,0,63,255,255,0,63,255,255,0,63,255,255,0,63,255,255,0,63,255,255,0,63,255,255,0,63,255,255,0,63,255,255,0,62,255,255,0,62,255,255,0,62,255,255,0,62,255,255,0,62,255,255,0,62,255,255,0,62,255,255,0,62,255,255,0,62,255,255,0,62,255,255,0,62,255,255,0,62,255,255,0,62,255,255,0,62,255,255,0,62,255,255,0,62,255,255,0,62,255,255,0,61,255,255,0,61,255,255,0,61,255,255,0,61,255,255,0,61,255,255,0,61,255,255,0,61,255,255,0,61,255,255,0,61,255,255,0,61,255,255,0,61,255,255,0,61,255,255,0,61,255,255,0,61,255,255,0,61,255,255,0,60,255,255,0,60,255,255,0,60,255,255,0,60,255,255,0,60,255,255,0,60,255,255,0,60,255,255,0,60,255,255,0,60,255,255,0,60,255,255,0,60,255,255,0,60,255,255,0,60,255,255,0,60,255,255,0,60,255,255,0,60,255,255,0,60,255,255,0,59,255,255,0,59,255,255,0,59,255,255,0,59,255,255,0,59,255,255,0,59,255,255,0,59,255,255,0,59,255,255,0,59,255,255,0,59,255,255,0,59,255,255,0,59,255,255,0,59,255,255,0,59,255,255,0,59,255,255,0,58,255,255,0,58,255,255,0,58,255,255,0,58,255,255,0,58,255,255,0,58,255,255,0,58,255,255,0,58,255,255,0,58,255,255,0,58,255,255,0,58,255,255,0,58,255,255,0,58,255,255,0,58,255,255,0,58,255,255,0,58,255,255,0,58,255,255,0,57,255,255,0,57,255,255,0,57,255,255,0,57,255,255,0,57,255,255,0,57,255,255,0,57,255,255,0,57,255,255,0,57,255,255,0,57,255,255,0,57,255,255,0,57,255,255,0,57,255,255,0,57,255,255,0,57,255,255,0,56,255,255,0,56,255,255,0,56,255,255,0,56,255,255,0,56,255,255,0,56,255,255,0,56,255,255,0,56,255,255,0,56,255,255,0,56,255,255,0,56,255,255,0,56,255,255,0,56,255,255,0,56,255,255,0,56,255,255,0,56,255,255,0,56,255,255,0,55,255,255,0,55,255,255,0,55,255,255,0,55,255,255,0,55,255,255,0,55,255,255,0,55,255,255,0,55,255,255,0,55,255,255,0,55,255,255,0,55,255,255,0,55,255,255,0,55,255,255,0,55,255,255,0,55,255,255,0,54,255,255,0,54,255,255,0,54,255,255,0,54,255,255,0,54,255,255,0,54,255,255,0,54,255,255,0,54,255,255,0,54,255,255,0,54,255,255,0,54,255,255,0,54,255,255,0,54,255,255,0,54,255,255,0,54,255,255,0,54,255,255,0,54,255,255,0,53,255,255,0,53,255,255,0,53,255,255,0,53,255,255,0,53,255,255,0,53,255,255,0,53,255,255,0,53,255,255,0,53,255,255,0,53,255,255,0,53,255,255,0,53,255,255,0,53,255,255,0,53,255,255,0,53,255,255,0,52,255,255,0,52,255,255,0,52,255,255,0,52,255,255,0,52,255,255,0,52,255,255,0,52,255,255,0,52,255,255,0,52,255,255,0,52,255,255,0,52,255,255,0,52,255,255,0,52,255,255,0,52,255,255,0,52,255,255,0,52,255,255,0,52,255,255,0,51,255,255,0,51,255,255,0,51,255,255,0,51,255,255,0,51,255,255,0,51,255,255,0,51,255,255,0,51,255,255,0,51,255,255,0,51,255,255,0,51,255,255,0,51,255,255,0,51,255,255,0,51,255,255,0,51,255,255,0,50,255,255,0,50,255,255,0,50,255,255,0,50,255,255,0,50,255,255,0,50,255,255,0,50,255,255,0,50,255,255,0,50,255,255,0,50,255,255,0,50,255,255,0,50,255,255,0,50,255,255,0,50,255,255,0,50,255,255,0,50,255,255,0,50,255,255,0,49,255,255,0,49,255,255,0,49,255,255,0,49,255,255,0,49,255,255,0,49,255,255,0,49,255,255,0,49,255,255,0,49,255,255,0,49,255,255,0,49,255,255,0,49,255,255,0,49,255,255,0,49,255,255,0,49,255,255,0,48,255,255,0,48,255,255,0,48,255,255,0,48,255,255,0,48,255,255,0,48,255,255,0,48,255,255,0,48,255,255,0,48,255,255,0,48,255,255,0,48,255,255,0,48,255,255,0,48,255,255,0,48,255,255,0,48,255,255,0,48,255,255,0,48,255,255,0,47,255,255,0,47,255,255,0,47,255,255,0,47,255,255,0,47,255,255,0,47,255,255,0,47,255,255,0,47,255,255,0,47,255,255,0,47,255,255,0,47,255,255,0,47,255,255,0,47,255,255,0,47,255,255,0,47,255,255,0,46,255,255,0,46,255,255,0,46,255,255,0,46,255,255,0,46,255,255,0,46,255,255,0,46,255,255,0,46,255,255,0,46,255,255,0,46,255,255,0,46,255,255,0,46,255,255,0,46,255,255,0,46,255,255,0,46,255,255,0,46,255,255,0,46,255,255,0,45,255,255,0,45,255,255,0,45,255,255,0,45,255,255,0,45,255,255,0,45,255,255,0,45,255,255,0,45,255,255,0,45,255,255,0,45,255,255,0,45,255,255,0,45,255,255,0,45,255,255,0,45,255,255,0,45,255,255,0,44,255,255,0,44,255,255,0,44,255,255,0,44,255,255,0,44,255,255,0,44,255,255,0,44,255,255,0,44,255,255,0,44,255,255,0,44,255,255,0,44,255,255,0,44,255,255,0,44,255,255,0,44,255,255,0,44,255,255,0,44,255,255,0,44,255,255,0,43,255,255,0,43,255,255,0,43,255,255,0,43,255,255,0,43,255,255,0,43,255,255,0,43,255,255,0,43,255,255,0,43,255,255,0,43,255,255,0,43,255,255,0,43,255,255,0,43,255,255,0,43,255,255,0,43,255,255,0,42,255,255,0,42,255,255,0,42,255,255,0,42,255,255,0,42,255,255,0,42,255,255,0,42,255,255,0,42,255,255,0,42,255,255,0,42,255,255,0,42,255,255,0,42,255,255,0,42,255,255,0,42,255,255,0,42,255,255,0,42,255,255,0,42,255,255,0,41,255,255,0,41,255,255,0,41,255,255,0,41,255,255,0,41,255,255,0,41,255,255,0,41,255,255,0,41,255,255,0,41,255,255,0,41,255,255,0,41,255,255,0,41,255,255,0,41,255,255,0,41,255,255,0,41,255,255,0,40,255,255,0,40,255,255,0,40,255,255,0,40,255,255,0,40,255,255,0,40,255,255,0,40,255,255,0,40,255,255,0,40,255,255,0,40,255,255,0,40,255,255,0,40,255,255,0,40,255,255,0,40,255,255,0,40,255,255,0,40,255,255,0,40,255,255,0,39,255,255,0,39,255,255,0,39,255,255,0,39,255,255,0,39,255,255,0,39,255,255,0,39,255,255,0,39,255,255,0,39,255,255,0,39,255,255,0,39,255,255,0,39,255,255,0,39,255,255,0,39,255,255,0,39,255,255,0,38,255,255,0,38,255,255,0,38,255,255,0,38,255,255,0,38,255,255,0,38,255,255,0,38,255,255,0,38,255,255,0,38,255,255,0,38,255,255,0,38,255,255,0,38,255,255,0,38,255,255,0,38,255,255,0,38,255,255,0,38,255,255,0,38,255,255,0,37,255,255,0,37,255,255,0,37,255,255,0,37,255,255,0,37,255,255,0,37,255,255,0,37,255,255,0,37,255,255,0,37,255,255,0,37,255,255,0,37,255,255,0,37,255,255,0,37,255,255,0,37,255,255,0,37,255,255,0,36,255,255,0,36,255,255,0,36,255,255,0,36,255,255,0,36,255,255,0,36,255,255,0,36,255,255,0,36,255,255,0,36,255,255,0,36,255,255,0,36,255,255,0,36,255,255,0,36,255,255,0,36,255,255,0,36,255,255,0,36,255,255,0,36,255,255,0,35,255,255,0,35,255,255,0,35,255,255,0,35,255,255,0,35,255,255,0,35,255,255,0,35,255,255,0,35,255,255,0,35,255,255,0,35,255,255,0,35,255,255,0,35,255,255,0,35,255,255,0,35,255,255,0,35,255,255,0,34,255,255,0,34,255,255,0,34,255,255,0,34,255,255,0,34,255,255,0,34,255,255,0,34,255,255,0,34,255,255,0,34,255,255,0,34,255,255,0,34,255,255,0,34,255,255,0,34,255,255,0,34,255,255,0,34,255,255,0,34,255,255,0,34,255,255,0,33,255,255,0,33,255,255,0,33,255,255,0,33,255,255,0,33,255,255,0,33,255,255,0,33,255,255,0,33,255,255,0,33,255,255,0,33,255,255,0,33,255,255,0,33,255,255,0,33,255,255,0,33,255,255,0,33,255,255,0,32,255,255,0,32,255,255,0,32,255,255,0,32,255,255,0,32,255,255,0,32,255,255,0,32,255,255,0,32,255,255,0,32,255,255);

			varying vec3 vTexCoord3D;

      uniform float rHigh;
      uniform float gHigh;
      uniform float bHigh;
      uniform float aHigh;

      uniform float rLow;
      uniform float gLow;
      uniform float bLow;
      uniform float aLow;

			uniform float time;

//			uniform vec4 colors[1024];

			vec4 permute( vec4 x ) {

				return mod( ( ( x * 34.0 ) + 1.0 ) * x, 289.0 );

			}

			vec4 taylorInvSqrt( vec4 r ) {

				return 1.79284291400159 - 0.85373472095314 * r;

			}

			float snoise( vec3 v ) {

				const vec2 C = vec2( 1.0 / 6.0, 1.0 / 3.0 );
				const vec4 D = vec4( 0.0, 0.5, 1.0, 2.0 );

				// First corner

				vec3 i  = floor( v + dot( v, C.yyy ) );
				vec3 x0 = v - i + dot( i, C.xxx );

				// Other corners

				vec3 g = step( x0.yzx, x0.xyz );
				vec3 l = 1.0 - g;
				vec3 i1 = min( g.xyz, l.zxy );
				vec3 i2 = max( g.xyz, l.zxy );

				//  x0 = x0 - 0. + 0.0 * C
				vec3 x1 = x0 - i1 + 1.0 * C.xxx;
				vec3 x2 = x0 - i2 + 2.0 * C.xxx;
				vec3 x3 = x0 - 1. + 3.0 * C.xxx;

				// Permutations

				i = mod( i, 289.0 );
				vec4 p = permute( permute( permute(
						 i.z + vec4( 0.0, i1.z, i2.z, 1.0 ) )
					   + i.y + vec4( 0.0, i1.y, i2.y, 1.0 ) )
					   + i.x + vec4( 0.0, i1.x, i2.x, 1.0 ) );

				// Gradients
				// ( N*N points uniformly over a square, mapped onto an octahedron.)

				float n_ = 1.0 / 7.0; // N=7

				vec3 ns = n_ * D.wyz - D.xzx;

				vec4 j = p - 49.0 * floor( p * ns.z *ns.z );  //  mod(p,N*N)

				vec4 x_ = floor( j * ns.z );
				vec4 y_ = floor( j - 7.0 * x_ );    // mod(j,N)

				vec4 x = x_ *ns.x + ns.yyyy;
				vec4 y = y_ *ns.x + ns.yyyy;
				vec4 h = 1.0 - abs( x ) - abs( y );

				vec4 b0 = vec4( x.xy, y.xy );
				vec4 b1 = vec4( x.zw, y.zw );

				vec4 s0 = floor( b0 ) * 2.0 + 1.0;
				vec4 s1 = floor( b1 ) * 2.0 + 1.0;
				vec4 sh = -step( h, vec4( 0.0 ) );

				vec4 a0 = b0.xzyw + s0.xzyw * sh.xxyy;
				vec4 a1 = b1.xzyw + s1.xzyw * sh.zzww;

				vec3 p0 = vec3( a0.xy, h.x );
				vec3 p1 = vec3( a0.zw, h.y );
				vec3 p2 = vec3( a1.xy, h.z );
				vec3 p3 = vec3( a1.zw, h.w );

				// Normalise gradients

				vec4 norm = taylorInvSqrt( vec4( dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3) ) );
				p0 *= norm.x;
				p1 *= norm.y;
				p2 *= norm.z;
				p3 *= norm.w;

				// Mix final noise value

				vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3) ), 0.0 );
				m = m * m;
				return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),
											dot(p2,x2), dot(p3,x3) ) );

			}


const int octaves = 4;

 float noise(vec3 position, float frequency, float persistence) {
    float total = 0.0; // Total value so far
    float maxAmplitude = 0.0; // Accumulates highest theoretical amplitude
    float amplitude = 1.0;
    for (int i = 0; i < octaves; i++) {
        // Get the noise sample
        total += snoise(position * frequency) * amplitude;
        // Make the wavelength twice as small
        frequency *= 2.0;
        // Add to our maximum possible amplitude
        maxAmplitude += amplitude;
        // Reduce amplitude according to persistence for the next octave
        amplitude *= persistence;
    }
    // Scale the result by the maximum amplitude
    return total / maxAmplitude;
}

    void main( void ) {

   float noiseBase = (noise(vTexCoord3D , 4.0, 0.7)+1.0)/400.0;

  //    TODO make it a uniform
  float rDiff = rHigh - rLow;
  float gDiff = gHigh - gLow;
    float bDiff = bHigh - bLow;
      float aDiff = aHigh - aLow;

       // Sunspots
      float frequency = 0.5;
      float t1 = snoise(vTexCoord3D * frequency) - .4;
//      if(t1 > .3){
//        gl_FagColor = vec4(vec3(rLow, gLow, bLow), 1.0);
//      }else if(t1 > .4){
//        gl_FagColor = vec4(vec3(0, 0, 0), 1.0);
//      }

 float ss = max(0.0, t1)/400.0;
 float total = noiseBase - ss;

        //  TODO more realistic
    //    gl_FragColor = vec4(vec3(rLow, gLow, bLow), aLow);

gl_FragColor = vec4(vec3(rLow+total*rDiff, gLow+total*gDiff, bLow+total*bDiff), aHigh+total*noiseBase);


//      if(t1 > .3){
//gl_FragColor = vec4(vec3(rHigh, gHigh, bHigh), aHigh);
//
//}else{
//gl_FragColor = vec4(vec3(rLow, gLow, bLow), aLow);
//}

//vec3 minus = vec3(total, total, total);
//        vec3 normColor = normalize(vec3(r, g, b)) - minus;
//
//        gl_FragColor = vec4(normColor, 255.0);


			}


